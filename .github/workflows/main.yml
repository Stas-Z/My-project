name: linting, testing, building
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
permissions:
  contents: write
  pages: write
  id-token: write
concurrency:
  group: 'pages'
  cancel-in-progress: true
jobs:
  build-and-ui-testing:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      matrix:
        node-version: [17.x]
    steps:
      - uses: actions/checkout@v2
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci
      - name: build production project
        run: npm run build:prod
        if: always()
      - name: build storybook
        run: npm run storybook:build
        if: always()
      - name: screenshot testing
        run: npm run test:ui:ci
        if: always()
      - name: unit testing
        if: always()
        run: npm run test:unit
      - name: Generate HTML report
        run: npm run test:ui:ci:report
        if: always()
      - name: move loki
        run: mv .loki reports/
        if: always()
      - name: Setup Pages
        uses: actions/configure-pages@v2
        if: always()
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        if: always()
        with:
          path: 'reports'
      - name: Deploy to GitHub Pages
        id: deployment
        if: always()
        uses: actions/deploy-pages@v1
      - name: Output
        run: printf "# Report \nReport is deployed to ${{ vars.REPORTS_WEBSITE_URL }}" >> $GITHUB_STEP_SUMMARY

  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.x]
    steps:
      - uses: actions/checkout@v2
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci
      - name: linting typescript
        run: npm run lint:ts
        if: always()
      - name: linting css
        run: npm run lint:scss

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-ui-testing, checks]
    strategy:
      matrix:
        node-version: [17.x]
    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          debug: true
          script_stop: true
          script: |
            cd ~/My-project   
            ${{ secrets.SCRIPT }}            
            source ~/.nvm/nvm.sh
            nvm use 17
            npm run build:prod
            rm -rf ~/../var/www/my-project/html
            mv ~/My-project/build ~/../var/www/my-project/html
            pm2 restart 0
      - name: Output
        run: printf "# Deployment \nWebsite is deployed to ${{ vars.WEBSITE_URL }}" >> $GITHUB_STEP_SUMMARY
